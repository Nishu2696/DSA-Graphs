Question Link: https://leetcode.com/problems/is-graph-bipartite/

class Solution {
    public boolean isBipartite(int[][] graph) {
        int n = graph.length;
        int[] visited = new int[n];
        Arrays.fill(visited, -1);

        for (int i = 0; i < n; i++) {
            if (visited[i] != -1) {
                continue;
            }
            if (dfs(graph, visited, i, 0) == false) {
                return false;
            }
        }

        return true;
    }

    public boolean dfs(int[][] graph, int[] visited, int currentVertex, int curr) {
        if (visited[currentVertex] != -1) {
            return visited[currentVertex] == curr;
        }
        visited[currentVertex] = curr;
        for (int neighbors: graph[currentVertex]) {
            if (dfs(graph, visited, neighbors, 1 - curr) == false) {
                return false;
            }
        }
        return true;
    }
}
